select(ncdsid, weekly_pay, educ23, educ33) %>%
mutate(age = 33,
educ23_flag = NA_integer_)                  # flag not relevant for this row
## 3  Age-46 wave ------------------------------------------------------
df_age46_clean <- df_age46_selected %>%
select(ncdsid, weekly_pay) %>%
mutate(age    = 46,
educ23 = NA_real_,
educ33 = NA_real_,
educ23_flag = NA_integer_)
## 4  Stack waves, choose the wave-specific education, then carry forward
df_combined <- bind_rows(df_age23_clean,
df_age33_clean,
df_age46_clean) %>%
arrange(ncdsid, age) %>%
group_by(ncdsid) %>%
mutate(
educ_wave = case_when(
age == 23 ~ educ23,       # already consolidated above
age == 33 ~ educ33,
TRUE      ~ NA_real_
)
) %>%
tidyr::fill(educ_wave, .direction = "down") %>%  # forward-fill to 33, 46
rename(educ = educ_wave) %>%
select(ncdsid, age, weekly_pay, educ, educ23_flag) %>%
ungroup()
## quick check for one ID
df_combined %>% filter(ncdsid == "N10734U")
table(df_combined$educ23_flag)
colnames(df_combined)
df_age23_selected[df_age23_selected$ncdsid == "N10004R",]
df_age33_selected[df_age33_selected$ncdsid == "N10004R",]
df_combined %>%
group_by(ncdsid) %>%
summarise(age_count = n()) %>%
filter(age_count == 3) %>%
nrow()
tmp <- df_combined %>%
filter(!is.na(weekly_pay) & weekly_pay > 0) %>%     # Only keep valid wage observations
group_by(ncdsid) %>%
summarise(
count = n(),
has_all_ages = all(c(23, 33, 46) %in% age)
) %>%
filter(has_all_ages) %>%
arrange(ncdsid)
View(tmp)
tmp <- df_combined %>%
filter(!is.na(weekly_pay) & weekly_pay > 0) %>%     # Keep valid wage rows
group_by(ncdsid) %>%
summarise(
count = n(),
has_all_ages = all(c(23, 33, 46) %in% age),
sum_wages = sum(weekly_pay, na.rm = TRUE)
) %>%
filter(has_all_ages) %>%
arrange(ncdsid)
View(tmp)
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(haven)
library(lavaan)
library(labelled)
df_combined <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/pretpourtrain.csv")
# 2. Predict for everyone
model <- readRDS("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/linear_model_weekly_pay2.rds")
id_levels <- levels(model$model[["factor(ncdsid)"]])
# split: rows we CAN impute vs. rows we LEAVE as NA
df_ok   <- df_combined %>% filter(ncdsid %in% id_levels)
df_skip <- df_combined %>% filter(!(ncdsid %in% id_levels))
df_ok <- df_ok %>%
mutate(weekly_pay = if_else(
working_status == 0 & is.na(weekly_pay),
0,
weekly_pay
))
df_ok <- df_ok %>% mutate(
pred_pay       = predict(model, newdata = .),
weekly_pay_imp = if_else(is.na(weekly_pay), pred_pay, weekly_pay)
)
df_ok <- df_ok %>% select(-pred_pay) %>% arrange(ncdsid, age)
df_ok <- df_ok %>% mutate(
weekly_pay_imp = if_else(weekly_pay_imp < 0, 0, weekly_pay_imp)
)
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(haven)
library(lavaan)
library(labelled)
df_combined <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/pretpourtrain.csv")
# 1. Fit on the non-missing wages only
# df_train <- df_combined %>% filter(!is.na(weekly_pay))
# #
# model <- lm("weekly_pay ~ age + factor(educ)*age + factor(ncdsid)", data = df_train)
# saveRDS(model, file = "/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/linear_model_weekly_pay2.rds")
#
# 2. Predict for everyone
model <- readRDS("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/linear_model_weekly_pay2.rds")
id_levels <- levels(model$model[["factor(ncdsid)"]])
# split: rows we CAN impute vs. rows we LEAVE as NA
df_ok   <- df_combined %>% filter(ncdsid %in% id_levels)
df_skip <- df_combined %>% filter(!(ncdsid %in% id_levels))
df_ok <- df_ok %>%
mutate(weekly_pay = if_else(
working_status == 0 & is.na(weekly_pay),
0,
weekly_pay
))
df_ok <- df_ok %>% mutate(
pred_pay       = predict(model, newdata = .),
weekly_pay_imp = if_else(is.na(weekly_pay), pred_pay, weekly_pay)
)
df_ok <- df_ok %>% select(-pred_pay) %>% arrange(ncdsid, age)
df_ok <- df_ok %>% mutate(
weekly_pay_imp = if_else(weekly_pay_imp < 0, 0, weekly_pay_imp)
)
df_ok <- df_ok %>%
group_by(ncdsid) %>%
filter(n() == 3) %>%
ungroup()
View(df_ok)
View(df_ok)
# LINEAR Interpolation
## 1.  Add helper columns ────────────────
df_ok <- df_ok %>%
mutate(
month_idx         = round(age * 12L),         # age in *whole* months
monthly_pay_imp   = weekly_pay_imp * 4.333     # 52 ÷ 12
)
## 2.  Interpolate month-by-month wages ───
# helper that returns a tibble for one id
make_month_grid <- function(d){
# keep only rows with a non-missing wage
d <- d[!is.na(d$monthly_pay_imp), ]
if(nrow(d) == 0) return(NULL)
full_months <- seq(min(d$month_idx), max(d$month_idx))  # month grid
# linear interpolation (rule = 2 = carry endpoints outside range if needed)
interp <- approx(
x   = d$month_idx,
y   = d$monthly_pay_imp,
xout= full_months,
rule= 2L
)$y
tibble(
ncdsid      = d$ncdsid[1],
month_idx   = full_months,
monthly_pay = interp
)
}
df_monthly <- df_ok %>%
arrange(ncdsid, month_idx) %>%
group_by(ncdsid) %>%
group_modify(~make_month_grid(.x)) %>%
ungroup()
## 3.  Aggregate to lifetime earnings ─────
df_lifetime <- df_monthly %>%
group_by(ncdsid) %>%
summarise(
lifetime_earn = sum(monthly_pay, na.rm = TRUE),  # nominal £
.groups = "drop"
)
warnings()
View(df_monthly)
View(df_lifetime)
summary(df_lifetime)
write.csv(df_lifetime, "/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/lifetime_earnings.csv", row.names = FALSE)
df_essay <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/essay11/Processed/essays_with_mfscores.csv")
df_lifetime <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/lifetime_earnings.csv", row.names = FALSE)
df_lifetime <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/lifetime_earnings.csv")
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(haven)
library(lavaan)
library(labelled)
df_essay <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/essay11/Processed/essays_with_mfscores.csv")
df_lifetime <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/lifetime_earnings.csv")
View(df_lifetime)
df_merge <- merge(df_lifetime, df_essay, by = "ncdsid", all.x = TRUE)
View(df_essay)
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(haven)
library(lavaan)
library(labelled)
df_essay <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/essay11/Processed/essays_with_mfscores.csv")
df_essay <- df_essay %>% rename(ncdsid = ID) %>% select(ncdsid, corrected, AUTHORITY.SUBVERSION, CARE.HARM, FAIRNESS.CHEATING, LOYALTY.BETRAYAL, PURITY.DEGRADATION)
df_lifetime <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/lifetime_earnings.csv")
df_merge <- merge(df_lifetime, df_essay, by = "ncdsid", all.x = TRUE)
View(df_merge)
df_merge <- na.omit(df_merge)
View(df_merge)
df_merge$lifetime_earn <- log(df_merge$lifetime_earnings)
reg_form <- "lifeime_earn ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION"
model <- lm(reg_form, data = df_merge)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifeime_earn))
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(haven)
library(lavaan)
library(labelled)
df_essay <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/essay11/Processed/essays_with_mfscores.csv")
df_essay <- df_essay %>% rename(ncdsid = ID) %>% select(ncdsid, corrected, AUTHORITY.SUBVERSION, CARE.HARM, FAIRNESS.CHEATING, LOYALTY.BETRAYAL, PURITY.DEGRADATION)
df_lifetime <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/lifetime_earnings.csv")
df_merge <- merge(df_lifetime, df_essay, by = "ncdsid", all.x = TRUE)
df_merge <- na.omit(df_merge)
View(df_lifetime)
df_merge <- df_merge %>% mutate(log_income = log(lifeime_earn))
View(df_merge)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION"
model <- lm(reg_form, data = df_merge)
summary(model)
df <- read_dta("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/Age0to16_Sweep0to3/stata/stata13/ncds0123.dta")
keep_admin_vars <- c( # Admin
"ncdsid" = "ncdsid", "n622" = "T0_chsex", "n0region" = "T0_nregion", "n1region" = "T1_region", "n2region" = "T2_region", "n3region" = "T3_region", "n419" = "T1_hhsize", "n2360" = "T3_hhsize",
# Parents Variables
"n195" = "T1_dadsch", "n537" = "T0_momsch", "n2462" = "T3_dadearnwek", "n2463" = "T3_momearnwek", "n2464" = "T3_othearnwek", "n2465" = "T3_dadearnmth", "n2466" = "T3_momearnmth", "n2467" = "T3_othearnmth",
# Cognition
"n90" = "T1_mathtest", "n457" = "T1_copytest", "n1840" = "T1_drawtest", "n92" = "T1_readingtest", "n914" = "T2_abVerbtest", "n917" = "T2_abNonverbtest", "n920" = "T2_abTotaltest", "n929" = "T2_copytest", "n926" = "T2_mathtest", "n923" = "T2_readingtest", "n2928" = "T3_readtest", "n2930" = "T3_mathtest")
df_selected <- df %>%
select(all_of(names(keep_admin_vars))) %>%
rename_with(~keep_admin_vars[.x], .cols = everything())
df <- read_dta("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/Age0to16_Sweep0to3/stata/stata13/ncds0123.dta")
keep_admin_vars <- c( # Admin
"ncdsid" = "ncdsid", "n622" = "T0_chsex", "n0region" = "T0_nregion", "n1region" = "T1_region", "n2region" = "T2_region", "n3region" = "T3_region", "n419" = "T1_hhsize", "n2360" = "T3_hhsize",
# Parents Variables
"n195" = "T1_dadsch", "n537" = "T0_momsch", "n2462" = "T3_dadearnwek", "n2463" = "T3_momearnwek", "n2464" = "T3_othearnwek", "n2465" = "T3_dadearnmth", "n2466" = "T3_momearnmth", "n2467" = "T3_othearnmth",
# Cognition
"n90" = "T1_mathtest", "n457" = "T1_copytest", "n1840" = "T1_drawtest", "n92" = "T1_readingtest", "n914" = "T2_abVerbtest", "n917" = "T2_abNonverbtest", "n920" = "T2_abTotaltest", "n929" = "T2_copytest", "n926" = "T2_mathtest", "n923" = "T2_readingtest", "n2928" = "T3_readtest", "n2930" = "T3_mathtest")
df_selected <- df %>%
select(all_of(names(keep_admin_vars))) %>%
rename_with(~keep_admin_vars[.x], .cols = everything())
df_merge2 <- merge(df_merge, df_selected, by = "ncdsid", all.x = TRUE)
View(df_merge2)
df_selected <- df_selected %>%
mutate(across(-ncdsid, ~ifelse(. <= -1, NA, .)))
df_merge2 <- merge(df_merge, df_selected, by = "ncdsid", all.x = TRUE)
View(df_merge2)
df_merge <- merge(df_merge, df_selected, by = "ncdsid", all.x = TRUE)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge)
nobs(model)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge)
nobs(model)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge)
nobs(model)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest + factor(T0_chex)"
model <- lm(reg_form, data = df_merge)
nobs(model)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest + factor(T0_chsex)"
model <- lm(reg_form, data = df_merge)
nobs(model)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge$chsex <- ifelse(df_merge$chsex == 2, 0, 1)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge$T0_chsex <- ifelse(df_merge$T0_chsex == 2, 0, 1)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest + factor(T0_chsex)"
model <- lm(reg_form, data = df_merge)
nobs(model)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge$T0_chsex <- ifelse(df_merge$T0_chsex == 2, 0, 1)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge, subset = chsex == 1)
nobs(model)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge$T0_chsex <- ifelse(df_merge$T0_chsex == 2, 0, 1)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge, subset = T0_chsex == 1)
nobs(model)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge$T0_chsex <- ifelse(df_merge$T0_chsex == 2, 0, 1)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge, subset = T0_chsex == 1)
nobs(model)
summary(model)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge, subset = T0_chsex == 0)
df_merge$T0_chsex <- ifelse(df_merge$T0_chsex == 2, 0, 1)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge, subset = T0_chsex == 0)
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(haven)
library(lavaan)
library(labelled)
df_essay <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/essay11/Processed/essays_with_mfscores.csv")
df_essay <- df_essay %>% rename(ncdsid = ID) %>% select(ncdsid, corrected, AUTHORITY.SUBVERSION, CARE.HARM, FAIRNESS.CHEATING, LOYALTY.BETRAYAL, PURITY.DEGRADATION)
df_lifetime <- read.csv("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/lifetime_earnings.csv")
df_merge <- merge(df_lifetime, df_essay, by = "ncdsid", all.x = TRUE)
df_merge <- na.omit(df_merge)
df <- read_dta("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/Age0to16_Sweep0to3/stata/stata13/ncds0123.dta")
keep_admin_vars <- c( # Admin
"ncdsid" = "ncdsid", "n622" = "T0_chsex", "n0region" = "T0_nregion", "n1region" = "T1_region", "n2region" = "T2_region", "n3region" = "T3_region", "n419" = "T1_hhsize", "n2360" = "T3_hhsize",
# Parents Variables
"n195" = "T1_dadsch", "n537" = "T0_momsch", "n2462" = "T3_dadearnwek", "n2463" = "T3_momearnwek", "n2464" = "T3_othearnwek", "n2465" = "T3_dadearnmth", "n2466" = "T3_momearnmth", "n2467" = "T3_othearnmth",
# Cognition
"n90" = "T1_mathtest", "n457" = "T1_copytest", "n1840" = "T1_drawtest", "n92" = "T1_readingtest", "n914" = "T2_abVerbtest", "n917" = "T2_abNonverbtest", "n920" = "T2_abTotaltest", "n929" = "T2_copytest", "n926" = "T2_mathtest", "n923" = "T2_readingtest", "n2928" = "T3_readtest", "n2930" = "T3_mathtest")
df_selected <- df %>%
select(all_of(names(keep_admin_vars))) %>%
rename_with(~keep_admin_vars[.x], .cols = everything())
df_selected <- df_selected %>%
mutate(across(-ncdsid, ~ifelse(. <= -1, NA, .)))
df_merge <- merge(df_merge, df_selected, by = "ncdsid", all.x = TRUE)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge$T0_chsex <- ifelse(df_merge$T0_chsex == 2, 0, 1)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge, subset = T0_chsex == 0)
nobs(model)
summary(model)
model <- lm(reg_form, data = df_merge, subset = T0_chsex == 1)
nobs(model)
summary(model)
model <- lm(reg_form, data = df_merge)
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge)
nobs(model)
summary(model)
df_merge <- df_merge %>% mutate(log_income = log(lifetime_earn))
vars_to_standardize <- c(
"T2_abTotaltest", "T2_copytest", "T2_mathtest", "T2_readingtest",
"AUTHORITY.SUBVERSION", "CARE.HARM", "FAIRNESS.CHEATING",
"LOYALTY.BETRAYAL", "PURITY.DEGRADATION"
)
df_merge$T0_chsex <- ifelse(df_merge$T0_chsex == 2, 0, 1)
df_merge[vars_to_standardize] <- scale(df_merge[vars_to_standardize])
reg_form <- "log_income ~ AUTHORITY.SUBVERSION + CARE.HARM + FAIRNESS.CHEATING + LOYALTY.BETRAYAL + PURITY.DEGRADATION + T2_mathtest"
model <- lm(reg_form, data = df_merge)
nobs(model)
summary(model)
library(dplyr)
library(tidyr)
library(readr)
library(stringr)
library(haven)
library(lavaan)
library(labelled)
df_age46 <- read_stata("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/Age46_Sweep7/stata/stata13/ncds7.dta")
var_labels <- sapply(df_age46, function(x) attr(x, "label"))
label_df <- data.frame(variable = names(var_labels), label = unname(var_labels), stringsAsFactors = FALSE)
df_age42 <- read_stata("/home/semipro321/OneDrive/School/McGill/Research Projects/Essay/Data/Age42_Sweep6/stata/stata13_se/ncds6_v2.dta")
var_labels <- sapply(df_age42, function(x) attr(x, "label"))
label_df <- data.frame(variable = names(var_labels), label = unname(var_labels), stringsAsFactors = FALSE)
View(label_df)
View(df_age42)
keep <- c(
"ncdsid" = "ncdsid",
"cgropay" = "tmpJobPay",       # PAY variable
"cgroprd" = "tmpJobPayPer",    # PAY PERIOD variable
"chours1" = "tmpJobHr",        # Usual hours/week
"soc" = "soc2000",             # SOC occupational code
# "n7soc90" = "soc1990",             # SOC occupational code (derived from the 2000)
"econact" = "empStatus"      # Main economic activity
)
# Select and rename
df_age42_selected <- df_age42 %>%
select(all_of(names(keep))) %>%
rename_with(~keep[.x], .cols = everything())
df_age42_selected <- df_age42_selected %>%
mutate(across(-ncdsid, ~ifelse(. <= -1, NA, .)))
View(df_age42_selected)
View(df_age42_selected)
keep <- c(
"ncdsid" = "ncdsid",
"cgropay" = "tmpJobPay",       # PAY variable
"cgroprd" = "tmpJobPayPer",    # PAY PERIOD variable
"chours1" = "tmpJobHr",        # Usual hours/week
"soc" = "soc2000",             # SOC occupational code
# "n7soc90" = "soc1990",             # SOC occupational code (derived from the 2000)
"econact" = "empStatus"      # Main economic activity
)
# Select and rename
df_age42_selected <- df_age42 %>%
select(all_of(names(keep))) %>%
rename_with(~keep[.x], .cols = everything())
df_age42_selected <- df_age42_selected %>%
mutate(across(-ncdsid, ~ifelse(. <= -1, NA, .)))
# Normalize pay to weekly
df_age42_selected$weekly_pay <- with(df_age42_selected, case_when(
tmpJobPayPer == 1 ~ tmpJobPay,          # Weekly
tmpJobPayPer == 2 ~ tmpJobPay / 2,      # Fortnightly
tmpJobPayPer == 3 ~ tmpJobPay / 4,      # Four weeks
tmpJobPayPer == 4 ~ tmpJobPay / 4.33,   # Calendar month
tmpJobPayPer == 5 ~ tmpJobPay / 52,     # Year
TRUE ~ NA_real_
))
View(df_age42_selected)
keep <- c(
"ncdsid" = "ncdsid",
"cgropay" = "tmpJobPay",       # PAY variable
"cgroprd" = "tmpJobPayPer",    # PAY PERIOD variable
"chours1" = "tmpJobHr",        # Usual hours/week
"soc" = "soc2000",             # SOC occupational code
# "n7soc90" = "soc1990",             # SOC occupational code (derived from the 2000)
"econact" = "empStatus"      # Main economic activity
)
# Select and rename
df_age42_selected <- df_age42 %>%
select(all_of(names(keep))) %>%
rename_with(~keep[.x], .cols = everything())
df_age42_selected <- df_age42_selected %>%
mutate(across(-ncdsid, ~ifelse(. <= -1, NA, .)))
# Normalize pay to weekly
df_age42_selected$weekly_pay <- with(df_age42_selected, case_when(
tmpJobPayPer == 1 ~ tmpJobPay,          # Weekly
tmpJobPayPer == 2 ~ tmpJobPay / 2,      # Fortnightly
tmpJobPayPer == 3 ~ tmpJobPay / 4,      # Four weeks
tmpJobPayPer == 4 ~ tmpJobPay / 4.33,   # Calendar month
tmpJobPayPer == 5 ~ tmpJobPay / 52,     # Year
TRUE ~ NA_real_
))
df_age42_selected$working_status <- case_when(
df_age42_selected$empStatus %in% c(1, 2, 3, 4)          ~ 1,
df_age42_selected$empStatus  %in% c(5:12)       ~ 0,  # Not working: unemployed, education, sick, retired, etc.
df_age42_selected$empStatus  %in% -9:-1         ~ NA_real_,  # Typical missing codes
TRUE                       ~ NA_real_   # Catch unexpected values
)
View(df_age42_selected)
View(df_age42_selected)
